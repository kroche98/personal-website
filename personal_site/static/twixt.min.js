function between(e,t,i){return t<e&&e<i||t>e&&e>i}const Player={R:"R",B:"B",X:"X"},COLORS={red:"#ff0000",black:"#000000",gray:"#cccccc"};class Peg{constructor(e,t){this.x=e,this.y=t}get asTuple(){return[this.x,this.y]}equals(e){return this.x===e.x&&this.y===e.y}gt(e){return this.x===e.x?this.y>e.y:this.x>e.x}lt(e){return this.x===e.x?this.y<e.y:this.x<e.x}}class Board{constructor(){this.pegState=new Map;for(let e=1;e<=24;e++)for(let t=1;t<=24;t++)this._setPeg([e,t],Player.X);this.redBarrierState=new Array,this.blackBarrierState=new Array}_stringifyPegTuple(e){return`${e[0]}_${e[1]}`}_destringifyPegTuple(e){const t=e.split("_");return[parseInt(t[0]),parseInt(t[1])]}_setPeg(e,t){this.pegState.set(this._stringifyPegTuple(e),t)}getPeg(e){return this.pegState.get(this._stringifyPegTuple(e))}placePeg(e,t){return(t!==Player.R||1!==e.x&&24!==e.x)&&((t!==Player.B||1!==e.y&&24!==e.y)&&(this.getPeg(e.asTuple)===Player.X&&(this._setPeg(e.asTuple,t),!0)))}placeBarrier(e,t,i){if((t.y-e.y)**2+(t.x-e.x)**2!==5)return!1;if(this.getPeg(e.asTuple)!==i||this.getPeg(t.asTuple)!==i)return!1;for(const[i,s]of this.redBarrierState.concat(this.blackBarrierState)){const r=(t.y-e.y)/(t.x-e.x),a=(s.y-i.y)/(s.x-i.x);if(r===a){if(e.equals(i)&&t.equals(s))return!1;if(e.equals(s)&&t.equals(i))return!1}else{let n=(e.x*r-i.x*a+i.y-e.y)/(r-a),l=r*(n-e.x)+e.y;if(between(n,e.x,t.x)&&between(n,i.x,s.x)&&between(l,e.y,t.y)&&between(l,i.y,s.y))return!1}}const s=e.lt(t)?[e,t]:[t,e];return i===Player.R?(this.redBarrierState.push(s),!0):i===Player.B&&(this.blackBarrierState.push(s),!0)}removePeg(e,t){return this.getPeg(e.asTuple)===t&&(t===Player.R?this.redBarrierState=this.redBarrierState.filter((t=>!e.equals(t[0])&&!e.equals(t[1]))):this.blackBarrierState=this.blackBarrierState.filter((t=>!e.equals(t[0])&&!e.equals(t[1]))),this._setPeg(e.asTuple,Player.X),!0)}removeBarrier(e,t,i){const s=e.lt(t)?[e,t]:[t,e],r=i===Player.R?this.redBarrierState:this.blackBarrierState;for(let e=0;e<r.length;e++){let t=r[e];if(s[0].equals(t[0])&&s[1].equals(t[1]))return r.splice(e,1),!0}return!1}getAdjacentPegs(e){let t;if(this.getPeg(e.asTuple)===Player.B)t=this.blackBarrierState;else{if(this.getPeg(e.asTuple)!==Player.R)return[];t=this.redBarrierState}let i=[];for(let[s,r]of t)e.equals(s)&&i.push(r),e.equals(r)&&i.push(s);return i}gameWon(e){const t=[];if(e===Player.R)for(let e=1;e<=24;e++)this.getPeg([e,1])===Player.R&&t.push(this._stringifyPegTuple([e,1]));else if(e===Player.B)for(let e=1;e<=24;e++)this.getPeg([1,e])===Player.B&&t.push(this._stringifyPegTuple([1,e]));const i=[];for(;t.length;){let e=t.pop();if(!i.includes(e)){i.push(e);let s=this._destringifyPegTuple(e);s=new Peg(...s);let r=this.getAdjacentPegs(s);for(let e of r)t.push(this._stringifyPegTuple(e.asTuple))}}for(let t of i)if(e===Player.R){if(24===this._destringifyPegTuple(t)[1])return!0}else if(e===Player.B&&24===this._destringifyPegTuple(t)[0])return!0;return!1}}class BoardDisplay{GRID_WIDTH=20;CLICK_RADIUS=Math.floor(.42*this.GRID_WIDTH);PEG_WIDTH=Math.floor(this.GRID_WIDTH/4);constructor(e,t){this.board=e,this.game=t,this.canvas=document.getElementById("twixt-canvas"),this.canvas.height=25*this.GRID_WIDTH,this.canvas.width=25*this.GRID_WIDTH}_windowToCanvas(e,t){const i=this.canvas.getBoundingClientRect();return{x:e-i.left*(this.canvas.width/i.width),y:t-i.top*(this.canvas.height/i.height)}}_canvasToPeg(e){const t=Math.round(e.x/this.GRID_WIDTH),i=Math.round(e.y/this.GRID_WIDTH);return(e.x-t*this.GRID_WIDTH)**2+(e.y-i*this.GRID_WIDTH)**2<=this.CLICK_RADIUS**2?new Peg(t,i):null}windowToPeg(e,t){const i=this._windowToCanvas(e,t);return this._canvasToPeg(i)}renderBoard(){const e=this.canvas.getContext("2d");e.clearRect(0,0,this.canvas.clientWidth,this.canvas.height),e.lineWidth=1,e.beginPath(),e.moveTo(2*this.GRID_WIDTH,1.5*this.GRID_WIDTH),e.lineTo(23*this.GRID_WIDTH,1.5*this.GRID_WIDTH),e.strokeStyle=COLORS.red,e.stroke(),e.closePath(),e.beginPath(),e.moveTo(2*this.GRID_WIDTH,23.5*this.GRID_WIDTH),e.lineTo(23*this.GRID_WIDTH,23.5*this.GRID_WIDTH),e.strokeStyle=COLORS.red,e.stroke(),e.closePath(),e.beginPath(),e.moveTo(1.5*this.GRID_WIDTH,2*this.GRID_WIDTH),e.lineTo(1.5*this.GRID_WIDTH,23*this.GRID_WIDTH),e.strokeStyle=COLORS.black,e.stroke(),e.closePath(),e.beginPath(),e.moveTo(23.5*this.GRID_WIDTH,2*this.GRID_WIDTH),e.lineTo(23.5*this.GRID_WIDTH,23*this.GRID_WIDTH),e.strokeStyle=COLORS.black,e.stroke(),e.closePath();for(let t=1;t<=24;t++)for(let i=1;i<=24;i++){let s=this.board.getPeg([t,i]),r=this.GRID_WIDTH*t,a=this.GRID_WIDTH*i;e.beginPath(),s===Player.X?(e.arc(r,a,this.PEG_WIDTH/2,0,2*Math.PI),e.fillStyle=COLORS.gray):s===Player.R?(e.arc(r,a,this.PEG_WIDTH,0,2*Math.PI),e.fillStyle=COLORS.red):s===Player.B&&(e.arc(r,a,this.PEG_WIDTH,0,2*Math.PI),e.fillStyle=COLORS.black),e.fill(),e.closePath()}for(const[t,i]of this.board.redBarrierState)e.beginPath(),e.moveTo(this.GRID_WIDTH*t.x,this.GRID_WIDTH*t.y),e.lineTo(this.GRID_WIDTH*i.x,this.GRID_WIDTH*i.y),e.strokeStyle=COLORS.red,e.stroke(),e.closePath();for(const[t,i]of this.board.blackBarrierState)e.beginPath(),e.moveTo(this.GRID_WIDTH*t.x,this.GRID_WIDTH*t.y),e.lineTo(this.GRID_WIDTH*i.x,this.GRID_WIDTH*i.y),e.strokeStyle=COLORS.black,e.stroke(),e.closePath();if(this.game.currentEndpointPeg){const t=this._windowToCanvas(this.game.movingEndpoint.x,this.game.movingEndpoint.y);e.beginPath(),e.moveTo(this.GRID_WIDTH*this.game.currentEndpointPeg.x,this.GRID_WIDTH*this.game.currentEndpointPeg.y),e.lineTo(t.x,t.y),2===this.game.gameState?this.game.currentPlayer===Player.B?e.strokeStyle=COLORS.black:this.game.currentPlayer===Player.R&&(e.strokeStyle=COLORS.red):4===this.game.gameState&&(e.strokeStyle=COLORS.gray),e.stroke(),e.closePath()}}}class Game{constructor(){this.initialize()}initialize(){this.board=new Board,this.boardDisplay=new BoardDisplay(this.board,this),this.currentPlayer=Player.R,this.gameState=0,this.currentEndpointPeg=null,this.movingEndpoint=null,this.boardDisplay.canvas.onmousedown=e=>this.onmousedown(e),this.boardDisplay.canvas.onmouseup=e=>this.onmouseup(e),this.boardDisplay.canvas.onmousemove=e=>this.onmousemove(e),this.winner=null,this.setGameState(1)}setButtonState(e){const t=[document.getElementById("place-peg-button"),document.getElementById("place-barrier-button"),document.getElementById("remove-peg-button"),document.getElementById("remove-barrier-button"),document.getElementById("end-turn-button"),document.getElementById("new-game-button")];for(let i=0;i<6;i++)"A"===e[i]?(t[i].style.visibility="visible",t[i].disabled=!1,t[i].classList.add("current-selection")):"C"===e[i]?(t[i].style.visibility="visible",t[i].disabled=!1,t[i].classList.remove("current-selection")):"D"===e[i]?(t[i].style.visibility="visible",t[i].disabled=!0,t[i].classList.remove("current-selection")):"H"===e[i]&&(t[i].style.visibility="hidden")}updateInfoDiv(){const e=document.getElementById("player-info");let t,i;this.winner===Player.R?(t="Red Player Wins!",i=COLORS.red):this.winner===Player.B?(t="Black Player Wins!",i=COLORS.black):this.currentPlayer===Player.R?(t="Red Player's Turn",i=COLORS.red):this.currentPlayer===Player.B&&(t="Black Player's Turn",i=COLORS.black),e.innerText=t,e.style.color=i;const s=document.getElementById("state-info");switch(this.gameState){case 1:t="Click on an empty space to place a peg.";break;case 2:t="Click and drag between two pegs to place a barrier.";break;case 3:t="Click on a peg to remove it.";break;case 4:t="Click and drag between two pegs to remove the barrier between them.";break;case 5:t="Game over!"}s.innerText=t}onmousedown(e){if(0!==e.button)return;let t;switch(this.gameState){case 1:case 3:case 5:break;case 2:t=this.boardDisplay.windowToPeg(e.clientX,e.clientY),t&&this.board.getPeg(t.asTuple)===this.currentPlayer&&(this.currentEndpointPeg=t,this.movingEndpoint={x:e.clientX,y:e.clientY});break;case 4:t=this.boardDisplay.windowToPeg(e.clientX,e.clientY),t&&this.board.getPeg(t.asTuple)===this.currentPlayer&&this.board.getAdjacentPegs(t).length>0&&(this.currentEndpointPeg=t,this.movingEndpoint={x:e.clientX,y:e.clientY})}}onmouseup(e){if(0!==e.button)return;const t=this.boardDisplay.windowToPeg(e.clientX,e.clientY);switch(this.gameState){case 1:if(t){this.board.placePeg(t,this.currentPlayer)&&this.setGameState(2)}break;case 2:if(t&&this.currentEndpointPeg){this.board.placeBarrier(this.currentEndpointPeg,t,this.currentPlayer)&&this.board.gameWon(this.currentPlayer)&&(this.winner=this.currentPlayer,this.setGameState(5))}this.movingEndpoint=null,this.currentEndpointPeg=null;break;case 3:t&&this.board.removePeg(t,this.currentPlayer);break;case 4:t&&this.currentEndpointPeg&&this.board.removeBarrier(this.currentEndpointPeg,t,this.currentPlayer),this.currentEndpointPeg=null,this.movingEndpoint=null}}onmousemove(e){switch(this.gameState){case 1:case 3:case 5:break;case 2:case 4:this.movingEndpoint={x:e.clientX,y:e.clientY}}}setGameState(e){switch(e){case 1:this.setButtonState("ADCCDH");break;case 2:this.currentEndpointPeg=null,this.movingEndpoint=null,this.setButtonState("DADDCH");break;case 3:this.setButtonState("CDACDH");break;case 4:this.currentEndpointPeg=null,this.movingEndpoint=null,this.setButtonState("CDCADH");break;case 5:this.currentEndpointPeg=null,this.movingEndpoint=null,this.setButtonState("DDDDDC")}this.gameState=e,this.updateInfoDiv()}endTurn(){this.currentPlayer=this.currentPlayer===Player.R?Player.B:Player.R,this.setGameState(1)}}const game=new Game;function animate(){game.boardDisplay.renderBoard(),requestAnimationFrame((()=>animate()))}document.getElementById("place-peg-button").onclick=()=>game.setGameState(1),document.getElementById("place-barrier-button").onclick=()=>game.setGameState(2),document.getElementById("remove-peg-button").onclick=()=>game.setGameState(3),document.getElementById("remove-barrier-button").onclick=()=>game.setGameState(4),document.getElementById("end-turn-button").onclick=()=>game.endTurn(),document.getElementById("new-game-button").onclick=()=>game.initialize(),requestAnimationFrame(animate);
